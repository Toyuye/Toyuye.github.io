{"version":3,"sources":["webpack:///./src/components/Charts/resizeChart.ts"],"names":["this","initResizeEvent","initSidebarResizeEvent","destroyResizeEvent","destroySidebarResizeEvent","chart","resize","e","propertyName","chartResizeHandler","window","addEventListener","removeEventListener","sidebarElm","document","getElementsByClassName","sidebarResizeHandler","name"],"mappings":"8MAMA,mMAKIA,KAAKC,kBACLD,KAAKE,2BANT,sCAUIF,KAAKG,qBACLH,KAAKI,8BAXT,kCAeIJ,KAAKC,kBACLD,KAAKE,2BAhBT,oCAoBIF,KAAKG,qBACLH,KAAKI,8BArBT,2CAyBQJ,KAAKK,OACPL,KAAKK,MAAMC,WA1BjB,2CA8B+BC,GACJ,UAAnBA,EAAEC,cACJR,KAAKS,uBAhCX,wCAqCQT,KAAKS,oBACPC,OAAOC,iBAAiB,SAAUX,KAAKS,sBAtC7C,2CA2CQT,KAAKS,oBACPC,OAAOE,oBAAoB,SAAUZ,KAAKS,sBA5ChD,+CAiDIT,KAAKa,WAAaC,SAASC,uBAAuB,YAAY,GAC1Df,KAAKa,YACPb,KAAKa,WAAWF,iBAAiB,gBAAiBX,KAC/CgB,wBApDT,kDAyDQhB,KAAKa,YACPb,KAAKa,WAAWD,oBAAoB,gBAAiBZ,KAClDgB,0BA3DT,GAA6B,QAA7B,UAHC,eAAU,CACTC,KAAM,iBAgEP,G","file":"js/analysis~workplace.c2aee564.js","sourcesContent":["import { ECharts } from \"echarts\";\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\n\r\n@Component({\r\n  name: \"ResizeMixin\"\r\n})\r\nexport default class extends Vue {\r\n  protected chart!: ECharts | null;\r\n  private sidebarElm?: Element;\r\n\r\n  mounted() {\r\n    this.initResizeEvent();\r\n    this.initSidebarResizeEvent();\r\n  }\r\n\r\n  beforeDestroy() {\r\n    this.destroyResizeEvent();\r\n    this.destroySidebarResizeEvent();\r\n  }\r\n\r\n  activated() {\r\n    this.initResizeEvent();\r\n    this.initSidebarResizeEvent();\r\n  }\r\n\r\n  deactivated() {\r\n    this.destroyResizeEvent();\r\n    this.destroySidebarResizeEvent();\r\n  }\r\n\r\n  private chartResizeHandler() {\r\n    if (this.chart) {\r\n      this.chart.resize();\r\n    }\r\n  }\r\n\r\n  private sidebarResizeHandler(e: TransitionEvent) {\r\n    if (e.propertyName === \"width\") {\r\n      this.chartResizeHandler();\r\n    }\r\n  }\r\n\r\n  private initResizeEvent() {\r\n    if (this.chartResizeHandler) {\r\n      window.addEventListener(\"resize\", this.chartResizeHandler);\r\n    }\r\n  }\r\n\r\n  private destroyResizeEvent() {\r\n    if (this.chartResizeHandler) {\r\n      window.removeEventListener(\"resize\", this.chartResizeHandler);\r\n    }\r\n  }\r\n\r\n  private initSidebarResizeEvent() {\r\n    this.sidebarElm = document.getElementsByClassName(\"el-aside\")[0];\r\n    if (this.sidebarElm) {\r\n      this.sidebarElm.addEventListener(\"transitionend\", this\r\n        .sidebarResizeHandler as EventListener);\r\n    }\r\n  }\r\n\r\n  private destroySidebarResizeEvent() {\r\n    if (this.sidebarElm) {\r\n      this.sidebarElm.removeEventListener(\"transitionend\", this\r\n        .sidebarResizeHandler as EventListener);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}